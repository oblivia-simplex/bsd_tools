#! /usr/bin/env zsh
for rc in colors.rc; do
  [ -f $rc ] && source ~/.${rc}
done

function killall () 
{
  FLAGS="$2"
  killer="kill"
  pgrep "^${1}$" \
    | tee >(cat <(echo -n "Killing ") - \
                <([ -n "$FLAGS" ] && echo "with $FLAGS")) \
    | xargs $killer $FLAGS && (pgrep -q ${1} && echo "Killed") 
  true
} 

function xkcdpasswd ()
{
  sort --sort=random /usr/share/dict/words \
          | head -n $1 \
          | tr \\n - \
          | sed s:-$:: && echo
}

function shred ()
{
  for f in $*; do
    dd if=/dev/urandom of=$f count=$(wc -c $f | awk '{ print $1 }') bs=1
  done
}

function shredR ()
{
  find $1 -type f \
    | while read f; do
       shred $f
      done
}

function srm ()
{
  for item in $*; do
    shred $item
    rm -f $item
  done
}

function srmR ()
{
  shredR $1
  rm -rf $1
}

function swap ()
{
  t=`mktemp`
  mv $1 $t && \
  mv $2 $1 && \
  mv $t $2 && \
  echo "swapped $1 and $2"
}

function gb () {
  git branch 2> /dev/null | pcregrep -o '(?<=\* ).+' | tr \\n ' '
}

function rm ()
{
  [ "x$1" = "x-rf" ] && shift
  D=/tmp/trash/$(date +%s)
  mkdir -p $D
  chmod 700 $D
  mv $* ${D} \
  && echo "Moved $* to ${D}"
}

function getmac ()
{
  ifconfig $1 | pcregrep -o '(?<=lladdr )([0-9a-f][0-9a-f]:){5}[0-9a-f][0-9a-f]'
}

function rndmac ()
{
  # allowable values for second nibble:
  # 2 00000010
  # 6 00000110
  # a 00001010
  # e 00001110
  cat /dev/urandom | tr -dc 0-9a-f \
            | dd bs=1 count=1 status=none
  cat /dev/urandom | tr -dc 26ae \
            | dd bs=1 count=1 status=none
  echo -n ':'
  cat /dev/urandom | tr -dc 0-9a-f | dd bs=1 count=10 status=none \
    | sed -r 's/([0-9a-f][0-9a-f])/\1:/g; s/:$//'
  echo 
}

function changemac ()
{
  [ $# = 0 ] && echo "Usage: changemac <interface> [mac address]" \
    && echo "A random mac address will be provided if one is not supplied." \
    && return
  IF=$1
  MAC=$2
  [ -n "$MAC" ] || MAC=`rndmac`
  b="${GREEN}[+]${DARKGREEN}"

  if [ `getmac ${IF}` = ${MAC} ]; then
    echo -e "${GREEN}MAC already set${RESET}"
  else
    echo -e "$b Taking down ${IF}..."
    sudo ifconfig ${IF} down
    echo -e "$b Changing mac address to ${MAC}" 
    sudo ifconfig ${IF} lladdr ${MAC}
    echo -e "$b Bringing ${IF} back up..."
    sudo ifconfig ${IF} up
    echo -e "$b Acquiring dhcp lease for ${IF}..."
    sudo dhclient ${IF}
  fi

  echo "$b Testing..."
  while : ; do
    ping -c 1 google.com && break
  done
  echo -e "${GREEN}READY${RESET}"
}


function watch () 
{
  DELAY=$1
  shift
  CMD=$1
  shift
  ARGS=$*
  while :; do
    clear
    eval "$CMD $ARGS"
    sleep $DELAY
  done
}

function pause ()
{
  echo "Hit <ENTER> to continue..."
  read
}

